@using CFLSuite.DataContracts.Models
@model int
@{
    ViewBag.Title = "Redemptions";
}

<h2>Redemptions</h2>

@(Html.Kendo().Grid<RedemptionModel>()
    .Name("redemptionGrid")
    .Scrollable()
    .Resizable(r => r.Columns(true))
    .ColumnMenu()
    .Filterable()
    .Sortable()
    .Groupable()
    .Editable(e => e.Mode(GridEditMode.InLine))
    .Columns(cols =>
    {
        cols.Bound(c => c.BetStarted).EditorTemplateName("DateTimeEditor");
        cols.Bound(c => c.Description).EditorTemplateName("TextInput");
        cols.Bound(c => c.ParticipantID).ClientTemplate("#=ParticipantName#").EditorTemplateName("ParticipantDropDown").EditorViewData(new { betID = Model });
        cols.Bound(c => c.ThrowID).ClientTemplate("#=ThrowDescription#").EditorTemplateName("ThrowDropDown").EditorViewData(new { cascadeFrom = "ParticipantID", betID = Model });
        cols.Command(c =>
        {
            c.Edit().UpdateText("Save");
            c.Destroy();
        });
    })
    .DataSource(ds => ds.Ajax()
        .Read(r => r.Action("GetRedemptionsByParentBet", "Redemption", new { betID = Model }))
        .Update(u => u.Action("SaveRedemptionModel", "Redemption"))
        .Create(c => c.Action("SaveRedemptionModel", "Redemption"))
        .Destroy(d => d.Action("DeleteRedemptionModel", "Redemption"))
        .Model(m =>
        {
            m.Id(i => i.BetID);
        })
        .Events(e => e.Error("onGridError"))
    )
)