@using CFLSuite.DataContracts.Entities
@using CFLSuite.DataContracts.Models
@model Bet
@{
    ViewBag.Title = "Add Throws";
}

<h2>@ViewBag.Title</h2>

<div class="container-fluid">
    <div class="row">
        <div class="col-xs-12 col-xs-6">
            @Html.LabelFor(m => m.BetStarted): @Html.DisplayFor(m => m.BetStarted)
        </div>
        <div class="col-xs-12 col-xs-6">
            @Html.LabelFor(m => m.Description): @Html.DisplayFor(m => m.Description)
        </div>
    </div>
    <div class="row">
        <div class="col-xs-12">
            @(Html.Kendo().TreeList<ThrowModel>()
                .Name("throwBetGrid")
                .Columns(col =>
                {
                    col.Add().Field(c => c.ThrowingPlayerID).Template("#=ThrowingPlayerName#").Width(150);
                    col.Add().Field(c => c.ThrowTypeID).Template("#=ThrowTypeDescription#");
                    col.Add().Field(c => c.Points).Width(75);
                    col.Add().Field(c => c.Notes);
                    col.Add().Field(c => c.ReceivingPlayerID).Template("#=ReceivingPlayerName#").Width(150);
                    col.Add().Command(c => c.CreateChild().Text("Add Redemption"));
                    col.Add().Command(c =>
                    {
                        c.Edit();
                        c.Destroy();
                    });
                })
                .ColumnMenu()
                .Toolbar(t => t.Create().Text("Add Throw"))
                .Editable(e =>
                {
                    e.Mode("popup");
                    e.Move(true);
                    e.TemplateName("EditThrow");
                })
                .Resizable(true)
                .DataSource(ds => ds
                    .Read(r => r.Action("GetThrowModels", "Bet", new { id = Model.BetID }))
                    .Update(r => r.Action("SaveThrowModel", "Bet"))
                    .Create(r => r.Action("SaveThrowModel", "Bet"))
                    .Destroy(d => d.Action("DeleteThrowModel", "Bet"))
                    .Model(m =>
                    {
                        m.Id(i => i.ThrowID);
                        m.Field(f => f.BetID).DefaultValue(Model.BetID);
                        m.ParentId(p => p.RedemptionForThrowID);
                    })
                )
            )
        </div>
    </div>
</div>
